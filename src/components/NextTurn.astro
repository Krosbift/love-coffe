<div class="button-section" id="button-next">
  <span>Pasar turno</span>
</div>

<script>
  import { LoveCoffe } from "../service/love-coffe.service.astro";

  const loveCoffe = LoveCoffe.getInstance();

  document.addEventListener("DOMContentLoaded", () => {
    const next = document.getElementById("button-next");
    if (next) {
      listener(next);
    }
  });

  function listener(next: HTMLElement): void {
    next.addEventListener("click", () => {
      if (validRecipe()) {
        const { order, ingredientUrls, characterUrl } =
          loveCoffe.initGameOrderList();
        const personImageDiv = document.getElementById(
          "person-image-orderlist",
        );
        if (personImageDiv && characterUrl) {
          personImageDiv.style.backgroundImage = `url('${characterUrl}')`;
        }

        const orderTextSpan = document.getElementById("order-text-orderlist");
        if (orderTextSpan && order) {
          orderTextSpan.textContent = order as string;
        }

        const ingredientsContainer = document.getElementById(
          "ingredients-orderlist",
        );
        if (
          ingredientsContainer &&
          ingredientUrls &&
          Array.isArray(ingredientUrls)
        ) {
          const itemsHTML = ingredientsContainer.querySelectorAll(".item");
          itemsHTML.forEach((item: Element, index: number) => {
            const htmlItem = item as HTMLElement;
            if (ingredientUrls[index] && ingredientUrls[index].url) {
              htmlItem.style.backgroundImage = `url('${ingredientUrls[index].url}')`;
            }

            if (itemsHTML.length === 3 && index === 1) {
              htmlItem.style.borderLeft = "20px solid #e8b77d";
              htmlItem.style.borderRight = "20px solid #e8b77d";
            }
          });
        }

        const items = document.querySelectorAll("#element-use");
        const ingredientsData = loveCoffe.getIngrediens();
        let index = 0;
        console.log(items, ingredientUrls);
        items.forEach((value) => {
          const usedLabel = value.querySelector(".used") as HTMLElement;
          const modifiedLabel = value.querySelector(".modified") as HTMLElement;
          if (usedLabel) {
            usedLabel.style.color = ingredientsData[index].used
              ? "green"
              : "red";
          }
          if (modifiedLabel) {
            modifiedLabel.style.color = ingredientsData[index].modified
              ? "green"
              : "red";
          }
          index = index + 1;
        });
        alert("Pedido completado con Ã©xito");
        return;
      }
      alert(
        "Los ingredientes en la bandeja no son suficientes para realizar el pedido",
      );
    });
  }

  function validRecipe(): boolean {
    return loveCoffe.validRecipe();
  }
</script>

<style>
  .button-section {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    background-color: #f3d7b5;
    border: 8px solid #7b3f1d;
    border-radius: 20px;
    width: 22vw;
    height: 10.5vh;
    transition: background-color 0.3s ease;
    cursor: pointer;
  }

  .button-section:hover {
    background-color: #d8be9b;
  }

  span {
    font-size: 40px;
    text-align: center;
  }

  @media (max-width: 768px) {
    .button-section {
      width: 80vw;
      height: 10.5vh;
    }
  }
</style>
